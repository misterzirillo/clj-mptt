<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ChangeListManager">
    <list default="true" id="28749469-6baf-45ae-8e85-7c778a58d700" name="Default" comment="" />
    <ignored path="$PROJECT_DIR$/out/" />
    <option name="EXCLUDED_CONVERTED_TO_IGNORED" value="true" />
    <option name="TRACKING_ENABLED" value="true" />
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileEditorManager">
    <leaf SIDE_TABS_SIZE_LIMIT_KEY="300">
      <file leaf-file-name="project.clj" pinned="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/project.clj">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="176">
              <caret line="8" column="64" lean-forward="false" selection-start-line="8" selection-start-column="64" selection-end-line="8" selection-end-column="64" />
              <folding />
            </state>
          </provider>
        </entry>
      </file>
      <file leaf-file-name="core.clj" pinned="false" current-in-tab="true">
        <entry file="file://$PROJECT_DIR$/src/clj_mptt/core.clj">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="137">
              <caret line="28" column="55" lean-forward="true" selection-start-line="28" selection-start-column="55" selection-end-line="28" selection-end-column="55" />
              <folding />
            </state>
          </provider>
        </entry>
      </file>
      <file leaf-file-name="util.clj" pinned="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/src/clj_mptt/util.clj">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="176">
              <caret line="8" column="0" lean-forward="false" selection-start-line="8" selection-start-column="0" selection-end-line="8" selection-end-column="0" />
              <folding />
            </state>
          </provider>
        </entry>
      </file>
      <file leaf-file-name="spec.clj" pinned="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/src/clj_mptt/spec.clj">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="176">
              <caret line="8" column="0" lean-forward="true" selection-start-line="8" selection-start-column="0" selection-end-line="8" selection-end-column="0" />
              <folding />
            </state>
          </provider>
        </entry>
      </file>
    </leaf>
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Clojure Namespace" />
      </list>
    </option>
  </component>
  <component name="GradleLocalSettings">
    <option name="modificationStamps">
      <map>
        <entry key="$PROJECT_DIR$/../bodhi" value="1481329901964" />
        <entry key="$PROJECT_DIR$/../graphql-groovy" value="2965046414208" />
        <entry key="$PROJECT_DIR$/../graphql-java" value="2962659803987" />
        <entry key="$PROJECT_DIR$/../relay-gorm-connector" value="1481329903421" />
        <entry key="$PROJECT_DIR$/../taskmaster" value="1481329905581" />
        <entry key="$USER_HOME$/git/angular-grails3" value="1442514133338" />
        <entry key="$USER_HOME$/git/bodhi" value="1481265709395" />
        <entry key="$USER_HOME$/git/console" value="1442896674516" />
        <entry key="$USER_HOME$/git/dashboard" value="1445390356743" />
        <entry key="$USER_HOME$/git/fantasy-stats" value="1475373195568" />
        <entry key="$USER_HOME$/git/grailTest" value="1431593984484" />
        <entry key="$USER_HOME$/git/grails-react" value="1465355267667" />
        <entry key="$USER_HOME$/git/grails-react-plugin" value="1465356486366" />
        <entry key="$USER_HOME$/git/graphql-java" value="2949138485764" />
        <entry key="$USER_HOME$/git/grtorrent" value="1444098175449" />
        <entry key="$USER_HOME$/git/mcmonitor" value="2882447385428" />
        <entry key="$USER_HOME$/git/minemon" value="1442891979718" />
        <entry key="$USER_HOME$/git/myFirstGrails/poop" value="1431582363144" />
        <entry key="$USER_HOME$/git/react-grails-asset-pipeline" value="1444112619988" />
        <entry key="$USER_HOME$/git/relay-gorm-connector" value="1445390749350" />
        <entry key="$USER_HOME$/git/relay-gorm-test" value="1474512771501" />
        <entry key="$USER_HOME$/git/relay-gorm-translator" value="1465667212332" />
        <entry key="$USER_HOME$/git/relay-tutorial" value="1466487549390" />
        <entry key="$USER_HOME$/git/super-home-tasks" value="1475788605091" />
        <entry key="$USER_HOME$/git/tamarind" value="2962500714845" />
        <entry key="$USER_HOME$/git/taskmaster" value="1481135670069" />
        <entry key="$USER_HOME$/git/webpack" value="1481265164058" />
      </map>
    </option>
    <option name="externalProjectsViewState">
      <projects_view />
    </option>
  </component>
  <component name="IdeDocumentHistory">
    <option name="CHANGED_PATHS">
      <list>
        <option value="$PROJECT_DIR$/resources/test-data.edn" />
        <option value="$APPLICATION_CONFIG_DIR$/scratches/scratch.clj" />
        <option value="$PROJECT_DIR$/src/clj_mptt/specter_playground.clj" />
        <option value="$PROJECT_DIR$/project.clj" />
        <option value="$PROJECT_DIR$/src/clj_mptt/spec.clj" />
        <option value="$PROJECT_DIR$/src/clj_mptt/core.clj" />
        <option value="$PROJECT_DIR$/src/clj_mptt/util.clj" />
      </list>
    </option>
  </component>
  <component name="JsBuildToolGruntFileManager" detection-done="true" sorting="DEFINITION_ORDER" />
  <component name="JsBuildToolPackageJson" detection-done="true" sorting="DEFINITION_ORDER" />
  <component name="JsGulpfileManager">
    <detection-done>true</detection-done>
    <sorting>DEFINITION_ORDER</sorting>
  </component>
  <component name="ProjectFrameBounds" extendedState="4">
    <option name="x" value="1306" />
    <option name="y" value="32" />
    <option name="width" value="2134" />
    <option name="height" value="1408" />
  </component>
  <component name="ProjectInspectionProfilesVisibleTreeState">
    <entry key="Project Default">
      <profile-state>
        <expanded-state>
          <State>
            <id />
          </State>
          <State>
            <id>Class structureJava</id>
          </State>
          <State>
            <id>Code maturity issuesJava</id>
          </State>
          <State>
            <id>Java</id>
          </State>
          <State>
            <id>Java language level migration aidsJava</id>
          </State>
          <State>
            <id>Javadoc issuesJava</id>
          </State>
          <State>
            <id>Performance issuesJava</id>
          </State>
          <State>
            <id>Spelling</id>
          </State>
          <State>
            <id>Spring</id>
          </State>
          <State>
            <id>Threading issuesJava</id>
          </State>
        </expanded-state>
        <selected-state>
          <State>
            <id>SpellCheckingInspection</id>
          </State>
        </selected-state>
      </profile-state>
    </entry>
  </component>
  <component name="ProjectView">
    <navigator currentView="ProjectPane" proportions="" version="1">
      <flattenPackages />
      <showMembers />
      <showModules />
      <showLibraryContents />
      <hideEmptyPackages />
      <abbreviatePackageNames />
      <autoscrollToSource />
      <autoscrollFromSource />
      <sortByType />
      <manualOrder />
      <foldersAlwaysOnTop value="true" />
    </navigator>
    <panes>
      <pane id="PackagesPane" />
      <pane id="ProjectPane">
        <subPane>
          <expand>
            <path>
              <item name="clj-mptt" type="b2602c69:ProjectViewProjectNode" />
              <item name="clj-mptt" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="clj-mptt" type="b2602c69:ProjectViewProjectNode" />
              <item name="clj-mptt" type="462c0819:PsiDirectoryNode" />
              <item name="src" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="clj-mptt" type="b2602c69:ProjectViewProjectNode" />
              <item name="clj-mptt" type="462c0819:PsiDirectoryNode" />
              <item name="src" type="462c0819:PsiDirectoryNode" />
              <item name="clj_mptt" type="462c0819:PsiDirectoryNode" />
            </path>
          </expand>
          <select />
        </subPane>
      </pane>
      <pane id="Scratches" />
      <pane id="Scope" />
      <pane id="AndroidView" />
    </panes>
  </component>
  <component name="PropertiesComponent">
    <property name="settings.editor.selected.configurable" value="Errors" />
    <property name="project.structure.last.edited" value="Project" />
    <property name="project.structure.proportion" value="0.15" />
    <property name="project.structure.side.proportion" value="0.2" />
    <property name="last_opened_file_path" value="$PROJECT_DIR$/../native-starter-kit/node_modules/react-native-cli" />
    <property name="nodejs_interpreter_path.stuck_in_default_project" value="/usr/bin/node" />
    <property name="WebServerToolWindowFactoryState" value="false" />
    <property name="aspect.path.notification.shown" value="true" />
    <property name="cursive.last.file.extension./home/mcirillo/Projects/clj-mptt/src" value="clj" />
    <property name="com.intellij.ide.scratch.LRUPopupBuilder$2/Languages" value="Clojure" />
  </component>
  <component name="ReplState" timestamp="1522447447008">{:repl-history {:ide [], :local [{:command &quot;(defn index-mptt []\n  (let [i    (atom 0)\n        path (S/recursive-path [] p\n                               (S/if-path\n                                 sequential?\n                                 [SZ/DOWN p SZ/UP SZ/LEFT (S/collect-one SZ/NODE) SZ/RIGHT SZ/RIGHT]\n                                 [(S/collect-one SZ/NODE) (S/collect-one SZ/NODE) SZ/RIGHT p]\n                                 )\n                               )]\n    (S/select [SZ/VECTOR-ZIP SZ/DOWN (S/collect-one SZ/NODE) SZ/RIGHTMOST (S/collect-one SZ/NODE)] data)))&quot;, :offset 535, :ns &quot;clj-mptt.specter-playground&quot;} {:command &quot;(defn index-mptt []\n  (let [i    (atom 0)\n        path (S/recursive-path [] p\n                               (S/if-path\n                                 sequential?\n                                 [SZ/DOWN p SZ/UP SZ/LEFT (S/collect-one SZ/NODE) SZ/RIGHT SZ/RIGHT]\n                                 [(S/collect-one SZ/NODE) (S/collect-one SZ/NODE) SZ/RIGHT p]\n                                 )\n                               )]\n    (S/select [SZ/VECTOR-ZIP SZ/DOWN S/VAL SZ/RIGHTMOST SZ/NODE] data)))&quot;, :offset 501, :ns &quot;clj-mptt.specter-playground&quot;} {:command &quot;(defn index-mptt []\n  (let [i    (atom 0)\n        path (S/recursive-path [] p\n                               (S/if-path\n                                 sequential?\n                                 [SZ/DOWN p SZ/UP SZ/LEFT (S/collect-one SZ/NODE) SZ/RIGHT SZ/RIGHT]\n                                 [(S/collect-one SZ/NODE) (S/collect-one SZ/NODE) SZ/RIGHT p]\n                                 )\n                               )]\n    (S/select [SZ/VECTOR-ZIP SZ/DOWN (S/collect-one SZ/NODE) SZ/RIGHTMOST SZ/NODE] data)))&quot;, :offset 519, :ns &quot;clj-mptt.specter-playground&quot;} {:command &quot;(defn index-mptt []\n  (let [i    (atom 0)\n        path (S/recursive-path [] p\n                               (S/if-path\n                                 sequential?\n                                 [SZ/DOWN p SZ/UP SZ/LEFT (S/collect-one SZ/NODE) SZ/RIGHT SZ/RIGHT]\n                                 [(S/collect-one SZ/NODE) (S/collect-one SZ/NODE) SZ/RIGHT p]\n                                 )\n                               )]\n    (S/select [SZ/VECTOR-ZIP path] data)))&quot;, :offset 471, :ns &quot;clj-mptt.specter-playground&quot;} {:command &quot;(defn index-mptt []\n  (let [i    (atom 0)\n        path (S/recursive-path [] p\n                               (S/if-path\n                                 sequential?\n                                 [SZ/DOWN p SZ/UP SZ/LEFT (S/collect-one SZ/NODE) SZ/RIGHT SZ/RIGHT p]\n                                 [(S/collect-one SZ/NODE) (S/collect-one SZ/NODE) SZ/RIGHT p]\n                                 )\n                               )]\n    (S/select [SZ/VECTOR-ZIP path] data)))&quot;, :offset 473, :ns &quot;clj-mptt.specter-playground&quot;} {:command &quot;(defn index-mptt []\n  (let [i    (atom 0)\n        path (S/recursive-path [] p\n                               (S/if-path\n                                 sequential?\n                                 [SZ/DOWN p SZ/UP SZ/LEFT (S/collect-one SZ/NODE) SZ/RIGHT SZ/RIGHT p]\n                                 [(S/collect-one SZ/NODE) (S/collect-one SZ/NODE) SZ/RIGHT p]\n                                 )\n                               )]\n    (S/select [SZ/VECTOR-ZIP (if-path sequential? SZ/NODE S/VAL)] data)))&quot;, :offset 504, :ns &quot;clj-mptt.specter-playground&quot;} {:command &quot;(defn index-mptt []\n  (let [i    (atom 0)\n        path (S/recursive-path [] p\n                               (S/if-path\n                                 sequential?\n                                 [SZ/DOWN p SZ/UP SZ/LEFT (S/collect-one SZ/NODE) SZ/RIGHT SZ/RIGHT p]\n                                 [(S/collect-one SZ/NODE) (S/collect-one SZ/NODE) SZ/RIGHT p]\n                                 )\n                               )]\n    (S/select [SZ/VECTOR-ZIP (S/if-path sequential? SZ/NODE S/VAL)] data)))&quot;, :offset 506, :ns &quot;clj-mptt.specter-playground&quot;} {:command &quot;(defn index-mptt []\n  (let [i    (atom 0)\n        path (S/recursive-path [] p\n                               (S/if-path\n                                 sequential?\n                                 [SZ/DOWN p SZ/UP SZ/LEFT (S/collect-one SZ/NODE) SZ/RIGHT SZ/RIGHT p]\n                                 [(S/collect-one SZ/NODE) (S/collect-one SZ/NODE) SZ/RIGHT p]\n                                 )\n                               )]\n    (S/select [SZ/VECTOR-ZIP SZ/DOWN SZ/RIGHT (S/if-path sequential? S/VAL S/VAL)] data)))&quot;, :offset 521, :ns &quot;clj-mptt.specter-playground&quot;} {:command &quot;(defn index-mptt []\n  (let [i    (atom 0)\n        path (S/recursive-path [] p\n                               (S/if-path\n                                 sequential?\n                                 [SZ/DOWN p SZ/UP SZ/LEFT (S/collect-one SZ/NODE) SZ/RIGHT SZ/RIGHT p]\n                                 [(S/collect-one SZ/NODE) (S/collect-one SZ/NODE) SZ/RIGHT p]\n                                 )\n                               )]\n    (S/select [SZ/VECTOR-ZIP SZ/DOWN SZ/RIGHT (S/if-path sequential? SZ/NODE S/VAL)] data)))&quot;, :offset 523, :ns &quot;clj-mptt.specter-playground&quot;} {:command &quot;(defn index-mptt []\n  (let [i    (atom 0)\n        path (S/recursive-path [] p\n                               (S/if-path\n                                 sequential?\n                                 [SZ/DOWN p SZ/UP SZ/LEFT (S/collect-one SZ/NODE) SZ/RIGHT SZ/RIGHT p]\n                                 [(S/collect-one SZ/NODE) (S/collect-one SZ/NODE) SZ/RIGHT p]\n                                 )\n                               )]\n    (S/select [SZ/VECTOR-ZIP SZ/DOWN (S/if-path sequential? SZ/NODE S/VAL)] data)))&quot;, :offset 514, :ns &quot;clj-mptt.specter-playground&quot;} {:command &quot;(defn index-mptt []\n  (let [i    (atom 0)\n        path (S/recursive-path [] p\n                               (S/if-path\n                                 sequential?\n                                 [SZ/DOWN p SZ/UP SZ/LEFT (S/collect-one SZ/NODE) SZ/RIGHT SZ/RIGHT p]\n                                 [(S/collect-one SZ/NODE) (S/collect-one SZ/NODE) SZ/RIGHT p]\n                                 )\n                               )]\n    (S/select [SZ/VECTOR-ZIP SZ/DOWN (S/if-path sequential? SZ/NODE SZ/NODE)] data)))&quot;, :offset 516, :ns &quot;clj-mptt.specter-playground&quot;} {:command &quot;(defn index-mptt []\n  (let [i    (atom 0)\n        path (S/recursive-path [] p\n                               (S/if-path\n                                 sequential?\n                                 [SZ/DOWN p SZ/UP SZ/LEFT (S/collect-one SZ/NODE) SZ/RIGHT SZ/RIGHT p]\n                                 [(S/collect-one SZ/NODE) (S/collect-one SZ/NODE) SZ/RIGHT p]\n                                 )\n                               )]\n    (S/select [SZ/VECTOR-ZIP SZ/DOWN (S/if-path sequential? SZ/VAL SZ/NODE)] data)))&quot;, :offset 515, :ns &quot;clj-mptt.specter-playground&quot;} {:command &quot;(defn index-mptt []\n  (let [i    (atom 0)\n        path (S/recursive-path [] p\n                               (S/if-path\n                                 sequential?\n                                 [SZ/DOWN p SZ/UP SZ/LEFT (S/collect-one SZ/NODE) SZ/RIGHT SZ/RIGHT p]\n                                 [(S/collect-one SZ/NODE) (S/collect-one SZ/NODE) SZ/RIGHT p]\n                                 )\n                               )]\n    (S/select [SZ/VECTOR-ZIP SZ/DOWN (S/if-path sequential? S/VAL SZ/NODE)] data)))&quot;, :offset 514, :ns &quot;clj-mptt.specter-playground&quot;} {:command &quot;(defn index-mptt []\n  (let [i    (atom 0)\n        path (S/recursive-path [] p\n                               (S/if-path\n                                 sequential?\n                                 [SZ/DOWN p SZ/UP SZ/LEFT (S/collect-one SZ/NODE) SZ/RIGHT SZ/RIGHT p]\n                                 [(S/collect-one SZ/NODE) (S/collect-one SZ/NODE) SZ/RIGHT p]\n                                 )\n                               )]\n    (S/select [SZ/VECTOR-ZIP SZ/DOWN (S/if-path vector? S/VAL SZ/NODE)] data)))&quot;, :offset 510, :ns &quot;clj-mptt.specter-playground&quot;} {:command &quot;(defn index-mptt []\n  (let [i    (atom 0)\n        path (S/recursive-path [] p\n                               (S/if-path\n                                 sequential?\n                                 [SZ/DOWN p SZ/UP SZ/LEFT (S/collect-one SZ/NODE) SZ/RIGHT SZ/RIGHT p]\n                                 [(S/collect-one SZ/NODE) (S/collect-one SZ/NODE) SZ/RIGHT p]\n                                 )\n                               )]\n    (S/select [SZ/VECTOR-ZIP SZ/DOWN (S/if-path [SZ/NODE vector?] S/VAL SZ/NODE)] data)))&quot;, :offset 520, :ns &quot;clj-mptt.specter-playground&quot;} {:command &quot;(defn index-mptt []\n  (let [i    (atom 0)\n        path (S/recursive-path [] p\n                               (S/if-path\n                                 sequential?\n                                 [SZ/DOWN p SZ/UP SZ/LEFT (S/collect-one SZ/NODE) SZ/RIGHT SZ/RIGHT p]\n                                 [(S/collect-one SZ/NODE) (S/collect-one SZ/NODE) SZ/RIGHT p]\n                                 )\n                               )]\n    (S/select [SZ/VECTOR-ZIP SZ/DOWN SZ/RIGHT (S/if-path [SZ/NODE vector?] S/VAL SZ/NODE)] data)))&quot;, :offset 529, :ns &quot;clj-mptt.specter-playground&quot;} {:command &quot;(defn index-mptt []\n  (let [i    (atom 0)\n        path (S/recursive-path [] p\n                               (S/if-path\n                                 [SZ/NODE vector?]\n                                 [SZ/DOWN p SZ/UP SZ/LEFT (S/collect-one SZ/NODE) SZ/RIGHT SZ/RIGHT p]\n                                 [(S/collect-one SZ/NODE) (S/collect-one SZ/NODE) SZ/RIGHT p]\n                                 )\n                               )]\n    (S/select [SZ/VECTOR-ZIP path] data)))&quot;, :offset 479, :ns &quot;clj-mptt.specter-playground&quot;} {:command &quot;(defn index-mptt []\n  (let [i    (atom 0)\n        path (S/recursive-path [] p\n                               (S/if-path\n                                 [SZ/NODE vector?]\n                                 [SZ/DOWN p SZ/UP SZ/LEFT (S/collect-one SZ/NODE) SZ/RIGHT SZ/RIGHT p]\n                                 [(S/collect-one SZ/NODE) (S/collect-one SZ/NODE) SZ/RIGHT p]\n                                 )\n                               )]\n    (S/select [SZ/VECTOR-ZIP SZ/DOWN SZ/RIGHT (S/if-path [SZ/NODE vector?] (S/collect-one \&quot;vector!\&quot;) (S/collect-one \&quot;not vector!\&quot;))] data)))&quot;, :offset 577, :ns &quot;clj-mptt.specter-playground&quot;} {:command &quot;(defn index-mptt []\n  (let [i    (atom 0)\n        path (S/recursive-path [] p\n                               (S/if-path\n                                 [SZ/NODE vector?]\n                                 [SZ/DOWN p SZ/UP SZ/LEFT (S/collect-one SZ/NODE) SZ/RIGHT SZ/RIGHT p]\n                                 [(S/collect-one SZ/NODE) (S/collect-one SZ/NODE) SZ/RIGHT p]\n                                 )\n                               )]\n    (S/select [SZ/VECTOR-ZIP SZ/DOWN SZ/RIGHT (S/if-path [SZ/NODE vector?] (S/collect-one SZ/DOWN) (S/collect-one SZ/NODE))] data)))&quot;, :offset 569, :ns &quot;clj-mptt.specter-playground&quot;} {:command &quot;(defn index-mptt []\n  (let [i    (atom 0)\n        path (S/recursive-path [] p\n                               (S/if-path\n                                 [SZ/NODE vector?]\n                                 [SZ/DOWN p SZ/UP SZ/LEFT (S/collect-one SZ/NODE) SZ/RIGHT SZ/RIGHT p]\n                                 [(S/collect-one SZ/NODE) (S/collect-one SZ/NODE) SZ/RIGHT p]\n                                 )\n                               )]\n    (S/select [SZ/VECTOR-ZIP SZ/DOWN \n               ;SZ/RIGHT\n               (S/if-path [SZ/NODE vector?] (S/collect-one SZ/DOWN) (S/collect-one SZ/NODE))] data)))&quot;, :offset 601, :ns &quot;clj-mptt.specter-playground&quot;} {:command &quot;(defn index-mptt []\n  (let [i    (atom 0)\n        path (S/recursive-path [] p\n                               (S/if-path\n                                 [SZ/NODE vector?]\n                                 [SZ/DOWN p SZ/UP SZ/LEFT (S/collect-one SZ/NODE) SZ/RIGHT SZ/RIGHT p]\n                                 [(S/collect-one SZ/NODE) (S/collect-one SZ/NODE) SZ/RIGHT p]\n                                 )\n                               )]\n    (S/select [SZ/VECTOR-ZIP SZ/DOWN\n               SZ/RIGHT\n               (S/if-path [SZ/NODE vector?] (S/collect-one SZ/DOWN) (S/collect-one SZ/NODE))] data)))&quot;, :offset 599, :ns &quot;clj-mptt.specter-playground&quot;} {:command &quot;(defn index-mptt []\n  (let [i    (atom 0)\n        path (S/recursive-path [] p\n                               (S/if-path\n                                 [SZ/NODE vector?]\n                                 [SZ/DOWN p SZ/UP SZ/LEFT (S/collect-one SZ/NODE) SZ/RIGHT SZ/RIGHT p]\n                                 [(S/collect-one SZ/NODE) (S/collect-one SZ/NODE) SZ/RIGHT p]\n                                 )\n                               )]\n    (S/select [SZ/VECTOR-ZIP SZ/DOWN\n               SZ/RIGHT\n               (S/if-path [SZ/NODE vector?] (S/collect-one SZ/DOWN SZ/NODE) (S/collect-one SZ/NODE))] data)))&quot;, :offset 607, :ns &quot;clj-mptt.specter-playground&quot;} {:command &quot;(defn index-mptt []\n  (let [i    (atom 0)\n        path (S/recursive-path [] p\n                               (S/if-path\n                                 [SZ/NODE vector?]\n                                 [SZ/DOWN p SZ/UP SZ/LEFT (S/collect-one SZ/NODE) SZ/RIGHT SZ/RIGHT p]\n                                 [(S/collect-one SZ/NODE) (S/collect-one SZ/NODE) SZ/RIGHT p]\n                                 )\n                               )]\n    (S/select [SZ/VECTOR-ZIP SZ/DOWN\n               SZ/LEFT\n               (S/if-path [SZ/NODE vector?] (S/collect-one SZ/DOWN SZ/NODE) (S/collect-one SZ/NODE))] data)))&quot;, :offset 606, :ns &quot;clj-mptt.specter-playground&quot;} {:command &quot;(defn index-mptt []\n  (let [i    (atom 0)\n        path (S/recursive-path [] p\n                               (S/if-path\n                                 [SZ/NODE vector?]\n                                 [SZ/DOWN p SZ/UP SZ/LEFT (S/collect-one SZ/NODE) SZ/RIGHT SZ/RIGHT p]\n                                 [(S/collect-one SZ/NODE) (S/collect-one SZ/NODE) SZ/RIGHT p]\n                                 )\n                               )]\n    (S/select [SZ/VECTOR-ZIP\n               path\n               ;SZ/DOWN\n               ;SZ/LEFT\n               ;(S/if-path [SZ/NODE vector?] (S/collect-one SZ/DOWN SZ/NODE) (S/collect-one SZ/NODE))\n               ] data)))&quot;, :offset 660, :ns &quot;clj-mptt.specter-playground&quot;} {:command &quot;(defn index-mptt []\n  (let [i    (atom 0)\n        path (S/recursive-path [] p\n                               (S/if-path\n                                 [SZ/NODE vector?]\n                                 [S/DOWN p SZ/UP SZ/LEFT (S/collect-one SZ/NODE) SZ/RIGHT SZ/RIGHT p]\n                                 [(S/collect-one SZ/NODE) (S/collect-one SZ/NODE) SZ/RIGHT p]\n                                 )\n                               )]\n    (S/select [SZ/VECTOR-ZIP\n               SZ/DOWN\n               path\n               ;SZ/DOWN\n               ;SZ/LEFT\n               ;(S/if-path [SZ/NODE vector?] (S/collect-one SZ/DOWN SZ/NODE) (S/collect-one SZ/NODE))\n               ] data)))&quot;, :offset 682, :ns &quot;clj-mptt.specter-playground&quot;} {:command &quot;(defn index-mptt []\n  (let [i    (atom 0)\n        path (S/recursive-path [] p\n                               (S/if-path\n                                 [SZ/NODE vector?]\n                                 [SZ/DOWN p SZ/UP SZ/LEFT (S/collect-one SZ/NODE) SZ/RIGHT SZ/RIGHT p]\n                                 [(S/collect-one SZ/NODE) (S/collect-one SZ/NODE) SZ/RIGHT p]\n                                 )\n                               )]\n    (S/select [SZ/VECTOR-ZIP\n               SZ/DOWN\n               path\n               ;SZ/DOWN\n               ;SZ/LEFT\n               ;(S/if-path [SZ/NODE vector?] (S/collect-one SZ/DOWN SZ/NODE) (S/collect-one SZ/NODE))\n               ] data)))&quot;, :offset 683, :ns &quot;clj-mptt.specter-playground&quot;} {:command &quot;(index-mptt)&quot;, :offset 12, :ns &quot;clj-mptt.specter-playground&quot;} {:command &quot;(def test-set (atom #{}))&quot;, :offset 25, :ns &quot;clj-mptt.specter-playground&quot;} {:command &quot;(swap! test-set conj 1)&quot;, :offset 23, :ns &quot;clj-mptt.specter-playground&quot;} {:command &quot;@test-set&quot;, :offset 9, :ns &quot;clj-mptt.specter-playground&quot;} {:command &quot;data&quot;, :offset 4, :ns &quot;clj-mptt.specter-playground&quot;} {:command &quot;(-&gt; (zip/vector-zip data) zip/next zip/node)&quot;, :offset 44, :ns &quot;clj-mptt.specter-playground&quot;} {:command &quot;(-&gt; (zip/vector-zip data) zip/next zip/next zip/node)&quot;, :offset 43, :ns &quot;clj-mptt.specter-playground&quot;} {:command &quot;(-&gt; (zip/vector-zip data) zip/next zip/next zip/next zip/node)&quot;, :offset 62, :ns &quot;clj-mptt.specter-playground&quot;} {:command &quot;(-&gt; (zip/vector-zip data) zip/next zip/next zip/next zip/next zip/node)&quot;, :offset 62, :ns &quot;clj-mptt.specter-playground&quot;} {:command &quot;(defn mptt-zip [data]\n  (let [i (atom 0)\n        res (atom {})\n        add-result (fn [loc]\n                     (let [node (zip/node loc)\n                           next (swap! i inc)]\n                       (if (get @res node)\n                         (swap! assoc-in [node :right-bound] next)\n                         (swap! assoc node {:left-bound next}))\n                       loc))]\n    (loop [loc (zip/next (zip/vector-zip data))]\n      (if-not (zip/end? loc)\n        (if (vector? (zip/node loc))\n          (do (-&gt; loc\n                  zip/next\n                  recur)\n              (-&gt; loc\n                  zip/prev\n                  add-result))\n          (-&gt; loc\n              add-result\n              add-result\n              zip/next\n              recur))))))&quot;, :offset 775, :ns &quot;clj-mptt.specter-playground&quot;} {:command &quot;(defn mptt-zip [data]\n  (let [i (atom 0)\n        res (atom {})\n        add-result (fn [loc]\n                     (let [node (zip/node loc)\n                           next (swap! i inc)]\n                       (if (get @res node)\n                         (swap! assoc-in [node :right-bound] next)\n                         (swap! assoc node {:left-bound next}))\n                       loc))]\n    (loop [loc (zip/next (zip/vector-zip data))]\n      (if-not (zip/end? loc)\n        (if (vector? (zip/node loc))\n          (do (-&gt; loc\n                  zip/next\n                  recur)\n              (-&gt; loc\n                  zip/prev\n                  add-result))\n          (recur (-&gt; loc\n                     add-result\n                     add-result\n                     zip/next)))))))&quot;, :offset 784, :ns &quot;clj-mptt.specter-playground&quot;} {:command &quot;(defn mptt-zip [data]\n  (let [i (atom 0)\n        res (atom {})\n        add-result (fn [loc]\n                     (let [node (zip/node loc)\n                           next (swap! i inc)]\n                       (if (get @res node)\n                         (swap! assoc-in [node :right-bound] next)\n                         (swap! assoc node {:left-bound next}))\n                       loc))]\n    (loop [loc (zip/next (zip/vector-zip data))]\n      (if (zip/end? loc)\n        (println \&quot;end reached!\&quot;)\n        (if (vector? (zip/node loc))\n          (do (-&gt; loc\n                  zip/next\n                  recur)\n              (-&gt; loc\n                  zip/prev\n                  add-result))\n          (recur (-&gt; loc\n                     add-result\n                     add-result\n                     zip/next)))))))&quot;, :offset 813, :ns &quot;clj-mptt.specter-playground&quot;} {:command &quot;add-result&quot;, :offset 10, :ns &quot;clj-mptt.specter-playground&quot;} {:command &quot;(defn mptt-zip [data]\n  (let [i (atom 0)\n        res (atom {})\n        add-result (fn [loc]\n                     (let [node (zip/node loc)\n                           next (swap! i inc)]\n                       (if (get @res node)\n                         (swap! assoc-in [node :right-bound] next)\n                         (swap! assoc node {:left-bound next}))\n                       loc))]\n    (loop [loc (zip/next (zip/vector-zip data))]\n      (if (zip/end? loc)\n        (println \&quot;end reached!\&quot;)\n        (recur (if (vector? (zip/node loc))\n                 (zip/next loc)\n                 (-&gt; loc\n                     add-result\n                     add-result\n                     zip/next)))))))&quot;, :offset 698, :ns &quot;clj-mptt.specter-playground&quot;} {:command &quot;(defn mptt-zip [data]\n  (let [i (atom 0)\n        res (atom {})\n        add-result (fn [loc]\n                     (let [node (zip/node loc)\n                           next (swap! i inc)]\n                       (if (get @res node)\n                         (swap! res assoc-in [node :right-bound] next)\n                         (swap! res assoc node {:left-bound next}))\n                       loc))]\n    (loop [loc (zip/next (zip/vector-zip data))]\n      (if (zip/end? loc)\n        (println \&quot;end reached!\&quot;)\n        (recur (if (vector? (zip/node loc))\n                 (zip/next loc)\n                 (-&gt; loc\n                     add-result\n                     add-result\n                     zip/next)))))))&quot;, :offset 706, :ns &quot;clj-mptt.specter-playground&quot;} {:command &quot;(defn mptt-zip [data]\n  (let [i (atom 0)\n        res (atom {})\n        add-result (fn [loc]\n                     (let [node (zip/node loc)\n                           next (swap! i inc)]\n                       (if (get @res node)\n                         (swap! res assoc-in [node :right-bound] next)\n                         (swap! res assoc node {:left-bound next}))\n                       loc))]\n    (loop [loc (zip/next (zip/vector-zip data))]\n      (if (zip/end? loc)\n        (println \&quot;end reached!\&quot;)\n        (recur (if (vector? (zip/node loc))\n                 (do\n                   (prn \&quot;vector\&quot; (zip/node loc))\n                   (zip/next loc))\n                 (-&gt; loc\n                     add-result\n                     add-result\n                     zip/next)))))))&quot;, :offset 779, :ns &quot;clj-mptt.specter-playground&quot;} {:command &quot;(defn mptt-zip [data]\n  (let [i (atom 0)\n        res (atom {})\n        add-result (fn [loc]\n                     (let [node (zip/node loc)\n                           next (swap! i inc)]\n                       (if (get @res node)\n                         (swap! res assoc-in [node :right-bound] next)\n                         (swap! res assoc node {:left-bound next}))\n                       loc))]\n    (loop [loc (zip/next (zip/vector-zip data))]\n      (if (zip/end? loc)\n        (println \&quot;end reached!\&quot;)\n        (recur (if (vector? (zip/node loc))\n                 (do\n                   (prn \&quot;vector\&quot; (zip/node loc))\n                   (zip/next loc))\n                 (-&gt; loc\n                     add-result\n                     add-result\n                     zip/next)))))\n    @res))&quot;, :offset 788, :ns &quot;clj-mptt.specter-playground&quot;} {:command &quot;(defn mptt-zip [data]\n  (let [i (atom 0)\n        res (atom {})\n        add-result (fn [loc]\n                     (let [node (zip/node loc)\n                           next (swap! i inc)]\n                       (if (get @res node)\n                         (swap! res assoc-in [node :right-bound] next)\n                         (swap! res assoc node {:left-bound next}))\n                       loc))]\n    (loop [loc (zip/next (zip/vector-zip data))]\n      (if (zip/end? loc)\n        nil\n        (recur (if (vector? (zip/node loc))\n                 (zip/next loc)\n                 (-&gt; loc\n                     add-result\n                     add-result\n                     zip/next)))\n        (if (vector? (zip/node loc))\n          (-&gt; (zip/prev loc)\n              add-result))))\n    @res))&quot;, :offset 787, :ns &quot;clj-mptt.specter-playground&quot;} {:command &quot;(defn mptt-zip [data]\n  (let [i (atom 0)\n        res (atom {})\n        add-result (fn [loc]\n                     (let [node (zip/node loc)\n                           next (swap! i inc)]\n                       (if (get @res node)\n                         (swap! res assoc-in [node :right-bound] next)\n                         (swap! res assoc node {:left-bound next}))\n                       loc))]\n    (loop [loc (zip/next (zip/vector-zip data))]\n      (if (zip/end? loc)\n        nil\n        (do\n          (recur (if (vector? (zip/node loc))\n                   (zip/next loc)\n                   (-&gt; loc\n                       add-result\n                       add-result\n                       zip/next)))\n          (if (vector? (zip/node loc))\n            (-&gt; (zip/prev loc)\n                add-result)))))\n    @res))&quot;, :offset 818, :ns &quot;clj-mptt.specter-playground&quot;} {:command &quot;(defn mptt-zip [data]\n  (let [i (atom 0)\n        res (atom {})\n        add-result (fn [loc]\n                     (let [node (zip/node loc)\n                           next (swap! i inc)]\n                       (if (get @res node)\n                         (swap! res assoc-in [node :right-bound] next)\n                         (swap! res assoc node {:left-bound next}))\n                       loc))]\n    (loop [loc (zip/next (zip/vector-zip data))]\n      (if (zip/end? loc)\n        nil\n        (do\n          (recur (if (vector? (zip/node loc))\n                   (zip/next loc)\n                   (-&gt; loc\n                       add-result\n                       add-result\n                       zip/next)))\n          )))\n    @res))&quot;, :offset 730, :ns &quot;clj-mptt.specter-playground&quot;} {:command &quot;(defn mptt-zip [data]\n  (let [i (atom -1)\n        res (atom {})\n        add-result (fn [loc]\n                     (let [node (zip/node loc)\n                           next (swap! i inc)]\n                       (if (get @res node)\n                         (swap! res assoc-in [node :right-bound] next)\n                         (swap! res assoc node {:left-bound next}))\n                       loc))]\n    (loop [loc (zip/next (zip/vector-zip data))]\n      (if (zip/end? loc)\n        nil\n        (do\n          (recur (if (vector? (zip/node loc))\n                   (zip/next loc)\n                   (-&gt; loc\n                       add-result\n                       add-result\n                       zip/next)))\n          )))\n    @res))&quot;, :offset 731, :ns &quot;clj-mptt.specter-playground&quot;} {:command &quot;(-&gt; (zip/vector-zip data) zip/next zip/next zip/next zip/next zip/next zip/next  zip/node)&quot;, :offset 90, :ns &quot;clj-mptt.specter-playground&quot;} {:command &quot;(-&gt; (zip/vector-zip data) zip/next zip/next zip/next zip/next zip/next   zip/node)&quot;, :offset 71, :ns &quot;clj-mptt.specter-playground&quot;} {:command &quot;(-&gt; (zip/vector-zip data) zip/next zip/next zip/next zip/next zip/next   zip/branch?)&quot;, :offset 85, :ns &quot;clj-mptt.specter-playground&quot;} {:command &quot;(-&gt; (zip/vector-zip data) zip/next zip/next zip/next zip/next zip/up   zip/branch?)&quot;, :offset 68, :ns &quot;clj-mptt.specter-playground&quot;} {:command &quot;(vector? nil)&quot;, :offset 13, :ns &quot;clj-mptt.specter-playground&quot;} {:command &quot;(-&gt; (zip/vector-zip [:a [:b]])\n    zip/down\n    zip/right)&quot;, :offset 58, :ns &quot;user&quot;} {:command &quot;(-&gt; (zip/vector-zip [:a [:b]])\n    zip/down\n    zip/right\n    zip/node)&quot;, :offset 70, :ns &quot;user&quot;} {:command &quot;(-&gt; (zip/vector-zip [:a [:b]])\n    zip/down\n    zip/right\n    zip/up\n    zip/node)&quot;, :offset 68, :ns &quot;user&quot;} {:command &quot;(mptt-zip)&quot;, :offset 10, :ns &quot;clj-mptt.specter-playground&quot;} {:command &quot;down&quot;, :offset 4, :ns &quot;clj-mptt.specter-playground&quot;} {:command &quot;(if \&quot;hi\&quot; \&quot;there\&quot;)&quot;, :offset 17, :ns &quot;clj-mptt.specter-playground&quot;} {:command &quot;(def p1 (-&gt; (zip/vector-zip data)\n            zip/down))&quot;, :offset 56, :ns &quot;clj-mptt.specter-playground&quot;} {:command &quot;p1&quot;, :offset 2, :ns &quot;clj-mptt.specter-playground&quot;} {:command &quot;(def p2 (-&gt; (zip/vector-zip data)\n            zip/down\n            zip/right\n            zip/left))&quot;, :offset 99, :ns &quot;clj-mptt.specter-playground&quot;} {:command &quot;(= p1 p2)&quot;, :offset 8, :ns &quot;clj-mptt.specter-playground&quot;} {:command &quot;(identical?)&quot;, :offset 12, :ns &quot;clj-mptt.specter-playground&quot;} {:command &quot;(identical? p1 p1)&quot;, :offset 17, :ns &quot;clj-mptt.specter-playground&quot;} {:command &quot;(def not-identical? (comp not identical?))&quot;, :offset 42, :ns &quot;clj-mptt.specter-playground&quot;} {:command &quot;(not-identical? 1 1)&quot;, :offset 20, :ns &quot;clj-mptt.specter-playground&quot;} {:command &quot;(not-identical? 1 2)&quot;, :offset 19, :ns &quot;clj-mptt.specter-playground&quot;} {:command &quot;(cond-&gt; 1 even?)&quot;, :offset 16, :ns &quot;clj-mptt.specter-playground&quot;} {:command &quot;(mptt-zip-2 data)&quot;, :offset 16, :ns &quot;clj-mptt.specter-playground&quot;} {:command &quot;(illegal-children [:a :a :a])&quot;, :offset 29, :ns &quot;clj-mptt.spec&quot;} {:command &quot;(illegal-children [:a :b :a])&quot;, :offset 24, :ns &quot;clj-mptt.spec&quot;} {:command &quot;(illegal-children [:a :b [:c] [:d]])&quot;, :offset 36, :ns &quot;clj-mptt.spec&quot;} {:command &quot;(illegal-children [[:0] :a :b [:c] [:d]])&quot;, :offset 22, :ns &quot;clj-mptt.spec&quot;} {:command &quot;(s/valid? ::first-child [:a])&quot;, :offset 29, :ns &quot;clj-mptt.spec&quot;} {:command &quot;(s/valid? ::first-child [[:b]])&quot;, :offset 31, :ns &quot;clj-mptt.spec&quot;} {:command &quot;(s/valid? ::first-child [[]])&quot;, :offset 26, :ns &quot;clj-mptt.spec&quot;} {:command &quot;(s/valid? ::data-then-vector [:a :b])&quot;, :offset 37, :ns &quot;clj-mptt.spec&quot;} {:command &quot;(s/valid? ::data-then-vector [[] :a :b])&quot;, :offset 31, :ns &quot;clj-mptt.spec&quot;} {:command &quot;(s/valid? ::data-then-vector [:a []])&quot;, :offset 34, :ns &quot;clj-mptt.spec&quot;} {:command &quot;(s/valid? ::data-then-vector [:a [] []])&quot;, :offset 37, :ns &quot;clj-mptt.spec&quot;} {:command &quot;(s/valid? ::level [:a [] []])&quot;, :offset 29, :ns &quot;clj-mptt.spec&quot;} {:command &quot;(s/valid? ::level [:a []])&quot;, :offset 26, :ns &quot;clj-mptt.spec&quot;} {:command &quot;(s/valid? ::level [:a [:b]])&quot;, :offset 25, :ns &quot;clj-mptt.spec&quot;} {:command &quot;(s/valid? ::level [:a [:b] :c :d])&quot;, :offset 32, :ns &quot;clj-mptt.spec&quot;} {:command &quot;(s/valid? ::level [:a [:b []] :c :d])&quot;, :offset 27, :ns &quot;clj-mptt.spec&quot;} {:command &quot;(s/valid? ::level [:a [:b] [:d] :c :d])&quot;, :offset 30, :ns &quot;clj-mptt.spec&quot;} {:command &quot;(s/valid? ::level [:a [:b :c] :c :d])&quot;, :offset 28, :ns &quot;clj-mptt.spec&quot;} {:command &quot;(s/explain )&quot;, :offset 11} {:command &quot;(s/explain ::level [[:b :c] :c :d])&quot;, :offset 22, :ns &quot;clj-mptt.spec&quot;} {:command &quot;(s/explain ::level [:a [:b :c] :c :d])&quot;, :offset 25, :ns &quot;clj-mptt.spec&quot;} {:command &quot;(s/exercise ::level 4)&quot;, :offset 21, :ns &quot;clj-mptt.spec&quot;} {:command &quot;(s/valid? ::level [[1] [{:data [1]}]])&quot;, :offset 38, :ns &quot;clj-mptt.spec&quot;} {:command &quot;(s/exercise ::level 1)&quot;, :offset 21, :ns &quot;clj-mptt.spec&quot;} {:command &quot;(s/explain ::level [{:hi \&quot;there\&quot;} [:b :c] :c :d])&quot;, :offset 49, :ns &quot;clj-mptt.spec&quot;} {:command &quot;(s/explain ::mptt [{:hi \&quot;there\&quot;} [:b :c] :c :d])&quot;, :offset 17, :ns &quot;clj-mptt.spec&quot;} {:command &quot;(s/exercise ::mptt 1)&quot;, :offset 18, :ns &quot;clj-mptt.spec&quot;} {:command &quot;(first [])&quot;, :offset 8, :ns &quot;clj-mptt.spec&quot;} {:command &quot;(mptt-zip data)&quot;, :offset 9, :ns &quot;clj-mptt.core&quot;} {:command &quot;(mptt-zip [])&quot;, :offset 11, :ns &quot;clj-mptt.core&quot;} {:command &quot;(print \&quot;hi\&quot;)&quot;, :offset 10, :ns &quot;clj-mptt.core&quot;} {:command &quot;(mptt-zip [:a])&quot;, :offset 13, :ns &quot;hi&quot;}], :remote []}}</component>
  <component name="RunDashboard">
    <option name="ruleStates">
      <list>
        <RuleState>
          <option name="name" value="ConfigurationTypeDashboardGroupingRule" />
        </RuleState>
        <RuleState>
          <option name="name" value="StatusDashboardGroupingRule" />
        </RuleState>
      </list>
    </option>
  </component>
  <component name="RunManager">
    <configuration default="true" type="Applet" factoryName="Applet">
      <option name="WIDTH" value="400" />
      <option name="HEIGHT" value="300" />
      <option name="POLICY_FILE" value="$APPLICATION_HOME_DIR$/bin/appletviewer.policy" />
      <module />
    </configuration>
    <configuration default="true" type="Application" factoryName="Application">
      <extension name="coverage" enabled="false" merge="false" sample_coverage="true" runner="idea" />
      <option name="MAIN_CLASS_NAME" />
      <option name="VM_PARAMETERS" />
      <option name="PROGRAM_PARAMETERS" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$" />
      <option name="ALTERNATIVE_JRE_PATH_ENABLED" value="false" />
      <option name="ALTERNATIVE_JRE_PATH" />
      <option name="ENABLE_SWING_INSPECTOR" value="false" />
      <option name="ENV_VARIABLES" />
      <option name="PASS_PARENT_ENVS" value="true" />
      <module name="" />
      <envs />
    </configuration>
    <configuration name="local" type="ClojureREPL" factoryName="Local" activateToolWindowBeforeRun="false">
      <setting name="replType" value="1" />
      <module name="clj-mptt" />
      <setting name="jvmArgs" value="" />
      <setting name="parameters" value="" />
      <setting name="workingDir" value="$PROJECT_DIR$" />
      <setting name="profiles" value="+dev" />
    </configuration>
    <configuration default="true" type="JUnit" factoryName="JUnit">
      <extension name="coverage" enabled="false" merge="false" sample_coverage="true" runner="idea" />
      <module name="" />
      <option name="ALTERNATIVE_JRE_PATH_ENABLED" value="false" />
      <option name="ALTERNATIVE_JRE_PATH" />
      <option name="PACKAGE_NAME" />
      <option name="MAIN_CLASS_NAME" />
      <option name="METHOD_NAME" />
      <option name="TEST_OBJECT" value="class" />
      <option name="VM_PARAMETERS" value="-ea" />
      <option name="PARAMETERS" />
      <option name="WORKING_DIRECTORY" value="$MODULE_DIR$" />
      <option name="ENV_VARIABLES" />
      <option name="PASS_PARENT_ENVS" value="true" />
      <option name="TEST_SEARCH_SCOPE">
        <value defaultName="singleModule" />
      </option>
      <envs />
      <patterns />
    </configuration>
    <configuration default="true" type="Remote" factoryName="Remote">
      <option name="USE_SOCKET_TRANSPORT" value="true" />
      <option name="SERVER_MODE" value="false" />
      <option name="SHMEM_ADDRESS" value="javadebug" />
      <option name="HOST" value="localhost" />
      <option name="PORT" value="5005" />
    </configuration>
    <configuration default="true" type="TestNG" factoryName="TestNG">
      <extension name="coverage" enabled="false" merge="false" sample_coverage="true" runner="idea" />
      <module name="" />
      <option name="ALTERNATIVE_JRE_PATH_ENABLED" value="false" />
      <option name="ALTERNATIVE_JRE_PATH" />
      <option name="SUITE_NAME" />
      <option name="PACKAGE_NAME" />
      <option name="MAIN_CLASS_NAME" />
      <option name="METHOD_NAME" />
      <option name="GROUP_NAME" />
      <option name="TEST_OBJECT" value="CLASS" />
      <option name="VM_PARAMETERS" value="-ea" />
      <option name="PARAMETERS" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$" />
      <option name="OUTPUT_DIRECTORY" />
      <option name="ANNOTATION_TYPE" />
      <option name="ENV_VARIABLES" />
      <option name="PASS_PARENT_ENVS" value="true" />
      <option name="TEST_SEARCH_SCOPE">
        <value defaultName="singleModule" />
      </option>
      <option name="USE_DEFAULT_REPORTERS" value="false" />
      <option name="PROPERTIES_FILE" />
      <envs />
      <properties />
      <listeners />
    </configuration>
    <configuration default="true" type="#org.jetbrains.idea.devkit.run.PluginConfigurationType" factoryName="Plugin">
      <module name="" />
      <option name="VM_PARAMETERS" value="-Xmx512m -Xms256m -XX:MaxPermSize=250m -ea" />
      <option name="PROGRAM_PARAMETERS" />
      <predefined_log_file id="idea.log" enabled="true" />
    </configuration>
  </component>
  <component name="ShelveChangesManager" show_recycled="false">
    <option name="remove_strategy" value="false" />
  </component>
  <component name="SvnConfiguration">
    <configuration />
  </component>
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="28749469-6baf-45ae-8e85-7c778a58d700" name="Default" comment="" />
      <created>1517465174074</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1517465174074</updated>
      <workItem from="1517465183509" duration="16393000" />
      <workItem from="1517608686998" duration="3059000" />
      <workItem from="1517612281400" duration="7879000" />
      <workItem from="1517680667280" duration="4973000" />
      <workItem from="1517689808185" duration="177000" />
      <workItem from="1517690070633" duration="875000" />
      <workItem from="1517695698083" duration="1919000" />
      <workItem from="1517704168245" duration="109000" />
      <workItem from="1517704319389" duration="98000" />
      <workItem from="1517704686332" duration="7809000" />
      <workItem from="1517968286700" duration="87000" />
      <workItem from="1517968394598" duration="2789000" />
      <workItem from="1518140864894" duration="1863000" />
      <workItem from="1519340237675" duration="1555000" />
      <workItem from="1519705425670" duration="159000" />
    </task>
    <servers />
  </component>
  <component name="TimeTrackingManager">
    <option name="totallyTimeSpent" value="49744000" />
  </component>
  <component name="ToolWindowManager">
    <frame x="1306" y="32" width="2134" height="1408" extended-state="4" />
    <editor active="true" />
    <layout>
      <window_info id="GfmBrowser" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="9" side_tool="false" content_ui="tabs" />
      <window_info id="TODO" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.32967034" sideWeight="0.5" order="6" side_tool="false" content_ui="tabs" />
      <window_info id="Palette&#9;" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="7" side_tool="false" content_ui="tabs" />
      <window_info id="Image Layers" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="8" side_tool="false" content_ui="tabs" />
      <window_info id="Capture Analysis" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="10" side_tool="false" content_ui="tabs" />
      <window_info id="Event Log" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.29591838" sideWeight="0.2965802" order="7" side_tool="true" content_ui="tabs" />
      <window_info id="Maven Projects" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="7" side_tool="false" content_ui="tabs" />
      <window_info id="REPL" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="true" show_stripe_button="true" weight="0.35335967" sideWeight="0.5313547" order="16" side_tool="true" content_ui="tabs" x="1433" y="159" width="1140" height="1211" />
      <window_info id="Version Control" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="false" weight="0.27050474" sideWeight="0.6385613" order="10" side_tool="false" content_ui="tabs" />
      <window_info id="Run" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.3288854" sideWeight="0.6479953" order="2" side_tool="false" content_ui="tabs" />
      <window_info id="Leiningen" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.3299735" sideWeight="0.5" order="11" side_tool="false" content_ui="tabs" />
      <window_info id="Terminal" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.32332015" sideWeight="0.28450108" order="12" side_tool="false" content_ui="tabs" x="2385" y="590" width="1039" height="830" />
      <window_info id="Capture Tool" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="8" side_tool="false" content_ui="tabs" />
      <window_info id="Designer" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="4" side_tool="false" content_ui="tabs" />
      <window_info id="Project" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="true" show_stripe_button="true" weight="0.17041647" sideWeight="0.5" order="0" side_tool="false" content_ui="combo" />
      <window_info id="Database" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="5" side_tool="false" content_ui="tabs" />
      <window_info id="Find" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.32964426" sideWeight="0.49449497" order="1" side_tool="false" content_ui="tabs" />
      <window_info id="Structure" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.25" sideWeight="0.5" order="1" side_tool="false" content_ui="tabs" />
      <window_info id="Theme Preview" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="12" side_tool="false" content_ui="tabs" />
      <window_info id="Favorites" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="4" side_tool="true" content_ui="tabs" />
      <window_info id="Debug" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="true" show_stripe_button="true" weight="0.35335967" sideWeight="0.46864527" order="3" side_tool="false" content_ui="tabs" />
      <window_info id="Cvs" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.25" sideWeight="0.5" order="4" side_tool="false" content_ui="tabs" />
      <window_info id="Palette" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="3" side_tool="false" content_ui="tabs" />
      <window_info id="Message" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="0" side_tool="false" content_ui="tabs" />
      <window_info id="Commander" active="false" anchor="right" auto_hide="false" internal_type="SLIDING" type="SLIDING" visible="false" show_stripe_button="true" weight="0.4" sideWeight="0.5" order="0" side_tool="false" content_ui="tabs" />
      <window_info id="Application Servers" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="8" side_tool="false" content_ui="tabs" />
      <window_info id="Hierarchy" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.25" sideWeight="0.5" order="2" side_tool="false" content_ui="combo" />
      <window_info id="Console" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.32967034" sideWeight="0.49882075" order="11" side_tool="false" content_ui="tabs" />
      <window_info id="Dynamic Properties" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="true" show_stripe_button="true" weight="0.13856132" sideWeight="0.5" order="8" side_tool="false" content_ui="tabs" />
      <window_info id="Ant Build" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.25" sideWeight="0.5" order="1" side_tool="false" content_ui="tabs" />
      <window_info id="UI Designer" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="2" side_tool="false" content_ui="tabs" />
      <window_info id="Grails View" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="3" side_tool="false" content_ui="tabs" />
      <window_info id="ReactNative" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="15" side_tool="false" content_ui="tabs" />
      <window_info id="Messages" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.32967034" sideWeight="0.46462265" order="9" side_tool="false" content_ui="tabs" />
      <window_info id="Java Enterprise" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="14" side_tool="false" content_ui="tabs" />
      <window_info id="Documentation" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="FLOATING" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="-1" side_tool="false" content_ui="tabs" x="1611" y="132" width="1729" height="1208" />
      <window_info id="Inspection" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.29356357" sideWeight="0.7791863" order="5" side_tool="false" content_ui="tabs" />
      <window_info id="Spring" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.17974882" sideWeight="0.49882075" order="13" side_tool="false" content_ui="tabs" />
      <window_info id="Persistence" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="5" side_tool="true" content_ui="tabs" />
      <window_info id="Web" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="6" side_tool="true" content_ui="tabs" />
      <window_info id="Gradle" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.11586085" sideWeight="0.5" order="6" side_tool="false" content_ui="tabs" />
    </layout>
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="1" />
  </component>
  <component name="VcsContentAnnotationSettings">
    <option name="myLimit" value="2678400000" />
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager>
      <option name="time" value="13" />
    </breakpoint-manager>
    <watches-manager>
      <configuration name="ClojureREPL">
        <watch expression="down" />
        <watch expression="right" />
        <watch expression="up" />
        <watch expression="(and down (loc-is-not-vec (zip/left loc)))" />
      </configuration>
    </watches-manager>
  </component>
  <component name="debuggerHistoryManager">
    <expressions id="evaluateExpression">
      <expression>
        <expression-string>(and down (not up?))</expression-string>
        <language-id>Clojure</language-id>
        <evaluation-mode>EXPRESSION</evaluation-mode>
      </expression>
      <expression>
        <expression-string>(and down (vector? (zip/node (zip/left loc))))</expression-string>
        <language-id>Clojure</language-id>
        <evaluation-mode>EXPRESSION</evaluation-mode>
      </expression>
      <expression>
        <expression-string>(zip/node (zip/left loc))</expression-string>
        <language-id>Clojure</language-id>
        <evaluation-mode>EXPRESSION</evaluation-mode>
      </expression>
      <expression>
        <expression-string>(and down (loc-is-not-vec down))</expression-string>
        <language-id>Clojure</language-id>
        <evaluation-mode>EXPRESSION</evaluation-mode>
      </expression>
      <expression>
        <expression-string>down</expression-string>
        <language-id>Clojure</language-id>
        <evaluation-mode>EXPRESSION</evaluation-mode>
      </expression>
      <expression>
        <expression-string>(zip/node up)</expression-string>
        <language-id>Clojure</language-id>
        <evaluation-mode>EXPRESSION</evaluation-mode>
      </expression>
      <expression>
        <expression-string>(zip/node down)</expression-string>
        <language-id>Clojure</language-id>
        <evaluation-mode>EXPRESSION</evaluation-mode>
      </expression>
      <expression>
        <expression-string>(loc-is-not-vec down)</expression-string>
        <language-id>Clojure</language-id>
        <evaluation-mode>EXPRESSION</evaluation-mode>
      </expression>
    </expressions>
  </component>
  <component name="editorHistoryManager">
    <entry file="file://$PROJECT_DIR$/project.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="132">
          <caret line="6" column="44" lean-forward="true" selection-start-line="6" selection-start-column="44" selection-end-line="6" selection-end-column="44" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/clj_mptt/core.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="22">
          <caret line="1" column="2" lean-forward="false" selection-start-line="1" selection-start-column="2" selection-end-line="1" selection-end-column="2" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/clj_mptt/specter_playground.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="66">
          <caret line="3" column="0" lean-forward="true" selection-start-line="3" selection-start-column="0" selection-end-line="3" selection-end-column="0" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/project.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="140">
          <caret line="7" column="0" lean-forward="false" selection-start-line="7" selection-start-column="0" selection-end-line="7" selection-end-column="0" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/clj_mptt/core.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="0">
          <caret line="0" column="0" lean-forward="false" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/project.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="140">
          <caret line="7" column="0" lean-forward="true" selection-start-line="7" selection-start-column="0" selection-end-line="7" selection-end-column="0" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/clj_mptt/core.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="0">
          <caret line="0" column="0" lean-forward="false" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/project.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="110">
          <caret line="5" column="15" lean-forward="false" selection-start-line="5" selection-start-column="15" selection-end-line="5" selection-end-column="15" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/clj_mptt/core.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="0">
          <caret line="0" column="0" lean-forward="false" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/project.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="133">
          <caret line="7" column="0" lean-forward="true" selection-start-line="7" selection-start-column="0" selection-end-line="7" selection-end-column="0" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/clj_mptt/core.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="0">
          <caret line="0" column="0" lean-forward="false" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/project.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="140">
          <caret line="7" column="0" lean-forward="false" selection-start-line="7" selection-start-column="0" selection-end-line="7" selection-end-column="0" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/clj_mptt/core.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="0">
          <caret line="0" column="0" lean-forward="false" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/project.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="140">
          <caret line="7" column="0" lean-forward="false" selection-start-line="7" selection-start-column="0" selection-end-line="7" selection-end-column="0" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/clj_mptt/core.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="0">
          <caret line="0" column="0" lean-forward="false" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/project.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="168">
          <caret line="7" column="0" lean-forward="false" selection-start-line="7" selection-start-column="0" selection-end-line="7" selection-end-column="0" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/clj_mptt/core.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="0">
          <caret line="0" column="0" lean-forward="false" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/project.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="140">
          <caret line="7" column="0" lean-forward="true" selection-start-line="7" selection-start-column="0" selection-end-line="7" selection-end-column="0" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/clj_mptt/core.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="0">
          <caret line="0" column="0" lean-forward="false" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/project.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="120">
          <caret line="6" column="40" lean-forward="false" selection-start-line="6" selection-start-column="40" selection-end-line="6" selection-end-column="40" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/clj_mptt/core.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="0">
          <caret line="0" column="0" lean-forward="false" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/project.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="0">
          <caret line="0" column="0" lean-forward="false" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/project.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="140">
          <caret line="7" column="0" lean-forward="false" selection-start-line="7" selection-start-column="0" selection-end-line="7" selection-end-column="0" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/clj_mptt/core.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="0">
          <caret line="0" column="0" lean-forward="false" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/project.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="154">
          <caret line="7" column="0" lean-forward="true" selection-start-line="7" selection-start-column="0" selection-end-line="7" selection-end-column="0" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/clj_mptt/core.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="0">
          <caret line="0" column="0" lean-forward="false" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/clj_mptt/core.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="0">
          <caret line="0" column="0" lean-forward="false" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$APPLICATION_CONFIG_DIR$/scratches/scratch.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="176">
          <caret line="8" column="27" lean-forward="false" selection-start-line="8" selection-start-column="27" selection-end-line="8" selection-end-column="27" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/resources/test-data.edn">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="0">
          <caret line="0" column="0" lean-forward="false" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/clj_mptt/specter_playground.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="761">
          <caret line="46" column="10" lean-forward="true" selection-start-line="46" selection-start-column="10" selection-end-line="46" selection-end-column="10" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/project.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="176">
          <caret line="8" column="64" lean-forward="false" selection-start-line="8" selection-start-column="64" selection-end-line="8" selection-end-column="64" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/clj_mptt/util.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="176">
          <caret line="8" column="0" lean-forward="false" selection-start-line="8" selection-start-column="0" selection-end-line="8" selection-end-column="0" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/clj_mptt/spec.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="176">
          <caret line="8" column="0" lean-forward="true" selection-start-line="8" selection-start-column="0" selection-end-line="8" selection-end-column="0" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/clj_mptt/core.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="137">
          <caret line="28" column="55" lean-forward="true" selection-start-line="28" selection-start-column="55" selection-end-line="28" selection-end-column="55" />
          <folding />
        </state>
      </provider>
    </entry>
  </component>
  <component name="masterDetails">
    <states>
      <state key="ArtifactsStructureConfigurable.UI">
        <settings>
          <artifact-editor />
          <splitter-proportions>
            <option name="proportions">
              <list>
                <option value="0.2" />
              </list>
            </option>
          </splitter-proportions>
        </settings>
      </state>
      <state key="FacetStructureConfigurable.UI">
        <settings>
          <last-edited>No facets are configured</last-edited>
          <splitter-proportions>
            <option name="proportions">
              <list>
                <option value="0.2" />
              </list>
            </option>
          </splitter-proportions>
        </settings>
      </state>
      <state key="GlobalLibrariesConfigurable.UI">
        <settings>
          <splitter-proportions>
            <option name="proportions">
              <list>
                <option value="0.2" />
              </list>
            </option>
          </splitter-proportions>
        </settings>
      </state>
      <state key="JdkListConfigurable.UI">
        <settings>
          <last-edited>9.0</last-edited>
          <splitter-proportions>
            <option name="proportions">
              <list>
                <option value="0.2" />
              </list>
            </option>
          </splitter-proportions>
        </settings>
      </state>
      <state key="ModuleStructureConfigurable.UI">
        <settings>
          <last-edited>clj-mptt</last-edited>
          <splitter-proportions>
            <option name="proportions">
              <list>
                <option value="0.2" />
                <option value="0.6" />
              </list>
            </option>
          </splitter-proportions>
        </settings>
      </state>
      <state key="ProjectJDKs.UI">
        <settings>
          <last-edited>Android API 23 Platform</last-edited>
          <splitter-proportions>
            <option name="proportions">
              <list>
                <option value="0.2" />
              </list>
            </option>
          </splitter-proportions>
        </settings>
      </state>
      <state key="ProjectLibrariesConfigurable.UI">
        <settings>
          <last-edited>Leiningen: clojure-complete:0.2.4</last-edited>
          <splitter-proportions>
            <option name="proportions">
              <list>
                <option value="0.2" />
              </list>
            </option>
          </splitter-proportions>
        </settings>
      </state>
    </states>
  </component>
</project>